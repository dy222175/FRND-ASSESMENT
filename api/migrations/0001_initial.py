# Generated by Django 4.2.23 on 2025-07-29 19:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Song',
            fields=[
                ('song_id', models.CharField(help_text='Unique identifier for the song.', max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='The title of the song.', max_length=255)),
                ('danceability', models.FloatField(help_text='How suitable a track is for dancing (0.0 to 1.0).')),
                ('energy', models.FloatField(help_text='Intensity and activity (0.0 to 1.0).')),
                ('acousticness', models.FloatField(help_text='Confidence measure of whether the track is acoustic (0.0 to 1.0).')),
                ('tempo', models.FloatField(help_text='Overall estimated tempo of a track in beats per minute (BPM).')),
                ('duration_ms', models.IntegerField(help_text='The duration of the track in milliseconds.')),
                ('num_sections', models.IntegerField(help_text='The number of sections in the song.')),
                ('num_segments', models.IntegerField(help_text='The number of segments in the song.')),
                ('rating', models.IntegerField(blank=True, default=None, help_text='Star rating given by a user (1-5). Null if not rated.', null=True)),
                ('key', models.IntegerField(help_text='The key the track is in (pitch class notation). Integer value.')),
                ('loudness', models.FloatField(help_text='The overall loudness of a track in decibels (dB).')),
                ('mode', models.IntegerField(help_text='Mode indicates the modality (major or minor) of a track (0=minor, 1=major).')),
                ('time_signature', models.IntegerField(help_text='The estimated overall time signature of a track.')),
                ('num_bars', models.IntegerField(help_text='The number of bars in the song.')),
                ('song_class', models.IntegerField(help_text='A classification attribute for the song (e.g., genre code, etc.).')),
                ('instrumentalness', models.FloatField(help_text='Predicts whether a track contains no vocals (0.0 to 1.0).')),
                ('liveness', models.FloatField(help_text='Detects the presence of an audience in the recording (0.0 to 1.0).')),
                ('valence', models.FloatField(help_text='A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track.')),
            ],
            options={
                'ordering': ['-rating', 'title'],
            },
        ),
    ]
